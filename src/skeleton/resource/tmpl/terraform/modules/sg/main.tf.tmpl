resource "aws_security_group" "{{ .Project }}-public-subnet-all-tcp" {
  vpc_id = var.vpc-vpc-{{ .Project }}-id
  name   = "{{ .Project }}-public-subnet-all-tcp"

  ingress {
    from_port = 0
    to_port   = 0
    protocol  = "-1"

    cidr_blocks = [
      var.vpc-subnet-{{ .Project }}-public-a-cidr-block,
      var.vpc-subnet-{{ .Project }}-public-c-cidr-block,
    ]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name        = "{{ .Project }}-publicsubnetalltcp"
    Environment = terraform.workspace
  }
}

resource "aws_security_group" "{{ .Project }}-private-subnet-all-tcp" {
  vpc_id = var.vpc-vpc-{{ .Project }}-id
  name   = "{{ .Project }}-private-subnet-all-tcp"

  ingress {
    from_port = 0
    to_port   = 0
    protocol  = "-1"

    cidr_blocks = [
      var.vpc-subnet-{{ .Project }}-private-a-cidr-block,
      var.vpc-subnet-{{ .Project }}-private-c-cidr-block,
    ]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name        = "{{ .Project }}-privatesubnetalltcp"
    Environment = terraform.workspace
  }
}

resource "aws_security_group" "{{ .Project }}-alb" {
  vpc_id = var.vpc-vpc-{{ .Project }}-id
  name   = "{{ .Project }}-alb"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 8000
    to_port     = 8000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name        = "{{ .Project }}-alb"
    Environment = terraform.workspace
  }
}

resource "aws_security_group" "{{ .Project }}-ecs" {
  vpc_id = var.vpc-vpc-{{ .Project }}-id
  name   = "{{ .Project }}-ecs"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]

    security_groups = [
      aws_security_group.{{ .Project }}-alb.id,
    ]
  }

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]

    security_groups = [
      aws_security_group.{{ .Project }}-alb.id,
    ]
  }

  ingress {
    from_port   = 8000
    to_port     = 8000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]

    security_groups = [
      aws_security_group.{{ .Project }}-alb.id,
    ]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name        = "{{ .Project }}-ecs"
    Environment = terraform.workspace
  }
}

module "{{ .Project }}-mysql" {
  source = "terraform-aws-modules/security-group/aws"

  vpc_id = var.vpc-vpc-{{ .Project }}-id
  name   = "{{ .Project }}-rds"

  ingress_with_source_security_group_id = [
    {
      rule                     = "mysql-tcp"
      source_security_group_id = aws_security_group.{{ .Project }}-ecs.id
    }
  ]

  egress_rules = ["all-all"]

  tags = {
    Environment = terraform.workspace
    Workspace   = terraform.workspace
  }
}
